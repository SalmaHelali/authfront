{"ast":null,"code":"var _jsxFileName = \"/home/salma/Bureau/animalerie \\uD83D\\uDC08/authentification/authfront/src/Components/Admin/UsersAdmin.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Checkbox from '@mui/material/Checkbox';\nimport Avatar from '@mui/material/Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UsersAdmin() {\n  _s();\n\n  const [checked, setChecked] = React.useState([1]);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      dense: true,\n      sx: {\n        width: '100%',\n        maxWidth: 360,\n        bgcolor: 'background.paper'\n      },\n      children: [0, 1, 2, 3].map(value => {\n        const labelId = `checkbox-list-secondary-label-${value}`;\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(Checkbox, {\n            edge: \"end\",\n            onChange: handleToggle(value),\n            checked: checked.indexOf(value) !== -1,\n            inputProps: {\n              'aria-labelledby': labelId\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this),\n          disablePadding: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: `Avatar n°${value + 1}`,\n                src: `/static/images/avatar/${value + 1}.jpg`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              id: labelId,\n              primary: `Line item ${value + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UsersAdmin, \"/QTm1xQsB7RZxmL77nUYHlkFXa0=\");\n\n_c = UsersAdmin;\nexport default UsersAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersAdmin\");","map":{"version":3,"sources":["/home/salma/Bureau/animalerie 🐈/authentification/authfront/src/Components/Admin/UsersAdmin.js"],"names":["React","List","ListItem","ListItemButton","ListItemText","ListItemAvatar","Checkbox","Avatar","UsersAdmin","checked","setChecked","useState","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","width","maxWidth","bgcolor","map","labelId"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAGA,SAASC,UAAT,GAAsB;AAAA;;AAGlB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,KAAK,CAACW,QAAN,CAAe,CAAC,CAAD,CAAf,CAA9B;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW,MAAM;AACpC,UAAMC,YAAY,GAAGL,OAAO,CAACM,OAAR,CAAgBF,KAAhB,CAArB;AACA,UAAMG,UAAU,GAAG,CAAC,GAAGP,OAAJ,CAAnB;;AAEA,QAAIK,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,KAAhB;AACD,KAFD,MAEO;AACLG,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACD;;AAEDJ,IAAAA,UAAU,CAACM,UAAD,CAAV;AACD,GAXD;;AAYF,sBACE;AAAA,2BACM,QAAC,IAAD;AAAM,MAAA,KAAK,MAAX;AAAY,MAAA,EAAE,EAAE;AAAEG,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,QAAQ,EAAE,GAA3B;AAAgCC,QAAAA,OAAO,EAAE;AAAzC,OAAhB;AAAA,gBACH,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAaC,GAAb,CAAkBT,KAAD,IAAW;AAC3B,cAAMU,OAAO,GAAI,iCAAgCV,KAAM,EAAvD;AACA,4BACE,QAAC,QAAD;AAEE,UAAA,eAAe,eACb,QAAC,QAAD;AACE,YAAA,IAAI,EAAC,KADP;AAEE,YAAA,QAAQ,EAAED,YAAY,CAACC,KAAD,CAFxB;AAGE,YAAA,OAAO,EAAEJ,OAAO,CAACM,OAAR,CAAgBF,KAAhB,MAA2B,CAAC,CAHvC;AAIE,YAAA,UAAU,EAAE;AAAE,iCAAmBU;AAArB;AAJd;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAUE,UAAA,cAAc,MAVhB;AAAA,iCAYE,QAAC,cAAD;AAAA,oCACE,QAAC,cAAD;AAAA,qCACE,QAAC,MAAD;AACE,gBAAA,GAAG,EAAG,YAAWV,KAAK,GAAG,CAAE,EAD7B;AAEE,gBAAA,GAAG,EAAG,yBAAwBA,KAAK,GAAG,CAAE;AAF1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE,QAAC,YAAD;AAAc,cAAA,EAAE,EAAEU,OAAlB;AAA2B,cAAA,OAAO,EAAG,aAAYV,KAAK,GAAG,CAAE;AAA3D;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAZF,WACOA,KADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAwBD,OA1BA;AADG;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GAlDQL,U;;KAAAA,U;AAoDT,eAAeA,UAAf","sourcesContent":["import * as React from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Checkbox from '@mui/material/Checkbox';\nimport Avatar from '@mui/material/Avatar';\n\n\nfunction UsersAdmin() {\n\n\n    const [checked, setChecked] = React.useState([1]);\n\n    const handleToggle = (value) => () => {\n      const currentIndex = checked.indexOf(value);\n      const newChecked = [...checked];\n  \n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n  \n      setChecked(newChecked);\n    };\n  return (\n    <div>\n          <List dense sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n      {[0, 1, 2, 3].map((value) => {\n        const labelId = `checkbox-list-secondary-label-${value}`;\n        return (\n          <ListItem\n            key={value}\n            secondaryAction={\n              <Checkbox\n                edge=\"end\"\n                onChange={handleToggle(value)}\n                checked={checked.indexOf(value) !== -1}\n                inputProps={{ 'aria-labelledby': labelId }}\n              />\n            }\n            disablePadding\n          >\n            <ListItemButton>\n              <ListItemAvatar>\n                <Avatar\n                  alt={`Avatar n°${value + 1}`}\n                  src={`/static/images/avatar/${value + 1}.jpg`}\n                />\n              </ListItemAvatar>\n              <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\n            </ListItemButton>\n          </ListItem>\n        );\n      })}\n    </List>\n    </div>\n  )\n}\n\nexport default UsersAdmin"]},"metadata":{},"sourceType":"module"}