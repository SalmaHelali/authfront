{"ast":null,"code":"import { FAIL, GET_CURRENT, LOGIN, REGISTER, LOGOUT, GET_USERS } from \"../types/authTypes\";\nimport axios from \"axios\";\nexport const register = (newuser, Navigate) => async dispatch => {\n  try {\n    //register wala login method post \n    //..nahkyy  maa lback \n    const res = await axios.post('/auth/signup', newuser);\n    dispatch({\n      type: REGISTER,\n      payload: res.data\n    }); //  nrajaa3 f user msg o tokeen\n\n    Navigate('/Profile');\n  } catch (error) {\n    dispatch({\n      type: FAIL,\n      payload: error.response.data\n    });\n  }\n};\nexport const login = (user, Navigate) => async dispatch => {\n  try {\n    const res = await axios.post('/auth/signIn', user);\n    dispatch({\n      type: LOGIN,\n      payload: res.data\n    });\n\n    if (res.data.user.role === \"user\") {\n      Navigate('/Profile');\n    }\n\n    if (res.data.user.role === \"admin\") {\n      Navigate('/Admin');\n    }\n  } catch (error) {\n    dispatch({\n      type: FAIL,\n      payload: error.response.data\n    });\n  }\n};\nexport const getcurrent = () => async dispatch => {\n  const token = localStorage.getItem('token');\n  const config = {\n    headers: {\n      authorization: token\n    }\n  };\n\n  try {\n    const res = await axios.get('/auth/current', config);\n    dispatch({\n      type: GET_CURRENT,\n      paylod: res.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const logout = Navigate => {\n  Navigate(\"/\");\n  return {\n    type: LOGOUT\n  };\n};\nexport const getusers = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/auth/users\");\n    console.log(\"data\", res.data);\n    dispatch({\n      type: GET_USERS,\n      payload: res.data\n    });\n  } catch (error) {\n    // dispatch({ type: FAIL, payload: error.response.data });\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/home/salma/Bureau/animalerie 🐈/authentification/authfront/src/redux/actions/authAction.js"],"names":["FAIL","GET_CURRENT","LOGIN","REGISTER","LOGOUT","GET_USERS","axios","register","newuser","Navigate","dispatch","res","post","type","payload","data","error","response","login","user","role","getcurrent","token","localStorage","getItem","config","headers","authorization","get","paylod","console","log","logout","getusers"],"mappings":"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","sourcesContent":["import {FAIL, GET_CURRENT , LOGIN, REGISTER,LOGOUT , GET_USERS} from \"../types/authTypes\"\nimport axios from \"axios\"\n\nexport const register =(newuser, Navigate )=>async (dispatch)=>{\n\ntry {\n    //register wala login method post \n\n    //..nahkyy  maa lback \n    const res= await  axios.post ('/auth/signup', newuser)\n    dispatch ({\n        type : REGISTER, \n        payload:res.data\n    }) ; //  nrajaa3 f user msg o tokeen\nNavigate('/Profile')\n    \n} catch (error) {\n    dispatch({type : FAIL , payload : error.response.data }) ; \n}\n\n}; \n\nexport const login = (user, Navigate)=> async (dispatch)=> {\n    try {\n        const res = await axios.post('/auth/signIn', user ) ;\n\n        dispatch ({type: LOGIN , payload : res.data }) ; \nif(res.data.user.role===\"user\")\n     { Navigate('/Profile')}\n     if(res.data.user.role===\"admin\")\n     { Navigate('/Admin')}\n    } catch (error) {\n        dispatch ({type : FAIL , payload : error.response.data})  \n    }\n}\n\n\nexport const getcurrent=()=> async(dispatch)=>{\n\nconst token =localStorage.getItem('token')\nconst config = {\n    headers : {\n        authorization : token ,\n    },\n}\n\n    try {\n        \n        const res = await axios.get('/auth/current',config);\n        \n        dispatch({type:GET_CURRENT ,paylod:res.data})\n        \n    } catch (error) {\n        console.log(error)\n        \n    }\n}\nexport const logout = (Navigate)=>{\n    Navigate(\"/\")    \n    return{\n    type:LOGOUT,\n    }\n}\nexport const getusers=()=>async(dispatch)=>{\n  try {\n    const res = await axios.get(\"/auth/users\");\n    console.log(\"data\",res.data)\n\n    dispatch({ type:GET_USERS, payload: res.data });\n  } catch (error) {\n    // dispatch({ type: FAIL, payload: error.response.data });\n    console.log(error);\n  }\n}"]},"metadata":{},"sourceType":"module"}