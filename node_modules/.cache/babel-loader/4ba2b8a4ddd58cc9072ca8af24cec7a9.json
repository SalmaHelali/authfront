{"ast":null,"code":"const {\n  REGISTER,\n  FAIL,\n  GET_CURRENT\n} = require(\"../types/authTypes\");\n\nconst initialState = {\n  user: null,\n  errors: null,\n  auth: false\n};\n\nconst authreducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case REGISTER:\n      localStorage.setItem(\"token\", payload.token);\n      return { ...state,\n        user: payload.user,\n        auth: true,\n        errors: null\n      };\n\n    case FAIL:\n      return { ...state,\n        errors: payload.errors,\n        auth: false\n      };\n\n    case GET_CURRENT:\n      return { ...state,\n        user: payload,\n        auth: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authreducer;","map":{"version":3,"sources":["/home/salma/Bureau/auth's/authentification/authfront/src/redux/reducers/authReducer.js"],"names":["REGISTER","FAIL","GET_CURRENT","require","initialState","user","errors","auth","authreducer","state","type","payload","localStorage","setItem","token"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA;AAAlB,IAAkCC,OAAO,CAAC,oBAAD,CAA/C;;AAIA,MAAMC,YAAY,GAAG;AACrBC,EAAAA,IAAI,EAAE,IADe;AAErBC,EAAAA,MAAM,EAAC,IAFc;AAGrBC,EAAAA,IAAI,EAAG;AAHc,CAArB;;AAMC,MAAMC,WAAW,GAAG,YAA6C;AAAA,MAA5CC,KAA4C,uEAApCL,YAAoC;AAAA,MAAtB;AAAEM,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;;AAC9D,UAAQD,IAAR;AAEA,SAAKV,QAAL;AACAY,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BF,OAAO,CAACG,KAArC;AACI,aAAO,EAAC,GAAGL,KAAJ;AAAaJ,QAAAA,IAAI,EAAGM,OAAO,CAACN,IAA5B;AAAkCE,QAAAA,IAAI,EAAE,IAAxC;AAA6CD,QAAAA,MAAM,EAAC;AAApD,OAAP;;AAEA,SAAKL,IAAL;AACA,aAAO,EAAC,GAAGQ,KAAJ;AAAUH,QAAAA,MAAM,EAACK,OAAO,CAACL,MAAzB;AAAmCC,QAAAA,IAAI,EAAC;AAAxC,OAAP;;AAED,SAAKL,WAAL;AACA,aAAO,EAAC,GAAGO,KAAJ;AAAYJ,QAAAA,IAAI,EAAGM,OAAnB;AAA6BJ,QAAAA,IAAI,EAAE;AAAnC,OAAP;;AAEH;AACI,aAAOE,KAAP;AAbJ;AAeH,CAhBA;;AAkBD,eAAeD,WAAf","sourcesContent":["const { REGISTER, FAIL, GET_CURRENT } = require(\"../types/authTypes\")\n\n\n\nconst initialState = {\nuser: null,\nerrors:null,\nauth : false\n}\n\n const authreducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n\n    case REGISTER : \n    localStorage.setItem(\"token\",payload.token)\n        return {...state  , user : payload.user, auth: true,errors:null }\n\n        case FAIL : \n        return {...state,errors:payload.errors  , auth:false}\n \n       case GET_CURRENT : \n       return {...state , user : payload , auth: true} \n\n    default:\n        return state ;\n    }\n}\n\nexport default authreducer"]},"metadata":{},"sourceType":"module"}